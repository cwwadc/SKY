logging:
  path: classpath:logback.xml
spring:
  datasource:
    driver-class-name: oracle.jdbc.driver.OracleDriver
    username: db_sky_ds
    password: dbsky$ds1017
#   url: jdbc:oracle:thin:@150.18.19.233:1521:gdsbfsky
    url: jdbc:oracle:thin:@150.18.19.233:1521:gdsbfsky
#     username: db_skyxt
#     password: db_skyxt
#     url: jdbc:oracle:thin:@150.18.38.111:1521:orcl
    # 文档 : https://github.com/alibaba/druid/tree/1.1.0/druid-spring-boot-starter
    druid:
      # 连接池配置，说明请参考Druid Wiki，配置_DruidDataSource参考配置 -> https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_DruidDataSource%E5%8F%82%E8%80%83%E9%85%8D%E7%BD%AE
      filters: stat # 配置监控统计拦截的filters,默认值为stat，配置多个请以英文逗号分隔，如stat,wall,log4j
      initialSize: 5
      minIdle: 5
      maxActive: 20
      maxWait: 60000 # 配置获取连接等待超时的时间
      timeBetweenEvictionRunsMillis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      minEvictableIdleTimeMillis: 300000 # 配置一个连接在池中最小生存的时间，单位是毫秒
      validationQuery: SELECT 1
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true # 是否打开PSCache
      maxPoolPreparedStatementPerConnectionSize: 20
# port
server:
  port: 8888
  tomcat:
    accesslog:
      enabled: true
      directory: /applogs/accesslog/sky-web
      pattern: "%h %l %u %t \"%r\" %s %D"

#必须配置 不然Invalid bound statement (not found)
mybatis-plus:
  mapper-locations: classpath*:/mapper/*.xml
  config-location:
  configuration:
    #log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
     typeAliasesPackage: com.sky.core.bean
#
# 分页 page helper
pagehelper:
    helperDialect: oracle
    supportMethodsArguments: true
    params: count=countSql
    
# rabbitmq configuration begin
rabbit.hosts: 150.18.50.191
rabbit.port: 5672
rabbit.username: rabbitadmin
rabbit.password: rabbitadmin
rabbit.publisher-confirms: true
rabbit.vhost: sky-product-host
rabbit.queue.offlineRecording: sky.q.offline.recording
rabbit.queue.offlineRecording.error: sky.q.offline.recording.error
rabbit.queue.message.maxRetryConsumeCount: 8
# rabbitmq configuration end

# rabbitmq listener configuration begin
web.mq.listener.listenerConcurrentConsumers: 100
web.mq.listener.maxListenerConcurrentConsumers: 500
web.mq.listener.receiveTimeout: 10000
web.mq.listener.preFetchCount: 50
# rabbitmq listener configuration end
